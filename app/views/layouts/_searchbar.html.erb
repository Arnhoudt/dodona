<% content_for :javascripts do %>
  <%= javascript_include_tag 'index' %>
<% end %>
<div class='table-toolbar'>
  <div class='table-toolbar-tools'>
    <i class="mdi mdi-magnify"></i>
    <form class='search' onsubmit="return false;">
      <input type='text' id='filter-query' placeholder='<%= t("layout.search.search") %>' name='filter' autocomplete="off"/>
      <div id="progress-filter" class="dodona-progress dodona-progress-indeterminate">
        <div class="progressbar bar bar1" style="width: 0%;"></div>
        <div class="bufferbar bar bar2" style="width: 100%;"></div>
        <div class="auxbar bar bar3" style="width: 0%;"></div>
      </div>
    </form>
    <% if local_assigns[:actions]&.any? %>
      <div class="btn-group hidden actions" id="kebab-menu">
        <a class="btn btn-icon dropdown-toggle" data-bs-toggle="dropdown">
          <i class="mdi mdi-dots-vertical"></i>
        </a>
        <ul class="dropdown-menu dropdown-menu-end">
        </ul>
      </div>
    <% end %>
  </div>
    <details class="text-muted" style="margin: 0.5em 0 0 1em; font-size: 14px">
      <summary>More filters</summary>
      <form>
        <div class="dropdown m-1" style="display: inline-block">
          <a class="btn btn-secondary dropdown-toggle" href="#" role="button" id="dropdownMenuLink" data-bs-toggle="dropdown" aria-expanded="false" style="font-size: 14px">
            Programming language <i class="mdi mdi-chevron-down mdi-12"></i>
          </a>

          <ul class="dropdown-menu" aria-labelledby="dropdownMenuLink">
            <li><a class="dropdown-item" href="#">Read activity <span class="badge rounded-pill bg-info float-end">54</span></a></li>
            <li><a class="dropdown-item" href="#">Python <span class="badge rounded-pill bg-info float-end">45</span></a></li>
            <li><a class="dropdown-item" href="#">HTML <span class="badge rounded-pill bg-info float-end">21</span></a></li>
            <li><a class="dropdown-item" href="#">Java <span class="badge rounded-pill bg-info float-end">12</span></a></li>
            <li><a class="dropdown-item disabled" href="#">Haskel <span class="badge rounded-pill bg-info float-end">0</span></a></li>
          </ul>
        </div>
        <div class="dropdown m-1" style="display: inline-block">
          <a class="btn btn-secondary dropdown-toggle" href="#" role="button" id="dropdownMenuLink" data-bs-toggle="dropdown" aria-expanded="false" style="font-size: 14px">
            Language <i class="mdi mdi-chevron-down mdi-12"></i>
          </a>

          <ul class="dropdown-menu" aria-labelledby="dropdownMenuLink">
            <li><a class="dropdown-item" href="#">
              <div class="form-check">
                <input class="form-check-input" type="checkbox" value="" id="flexCheckDefault">
                <label class="form-check-label" for="flexCheckDefault" style="width: 100%">
                  English <span class="badge rounded-pill bg-info float-end">130</span>
                </label>
              </div>
            </a></li>
            <li><a class="dropdown-item" href="#">
              <div class="form-check">
                <input class="form-check-input" type="checkbox" value="" id="flexCheckDefault">
                <label class="form-check-label" for="flexCheckDefault"  style="width: 100%">
                  Dutch <span class="badge rounded-pill bg-info float-end">113</span>
                </label>
              </div>
            </a></li>
          </ul>
        </div>
        <div class="dropdown m-1" style="display: inline-block">
          <a class="btn btn-secondary dropdown-toggle" href="#" role="button" id="dropdownMenuLink" data-bs-toggle="dropdown" aria-expanded="false" style="font-size: 14px">
            Status <i class="mdi mdi-chevron-down mdi-12"></i>
          </a>

          <ul class="dropdown-menu" aria-labelledby="dropdownMenuLink">
            <li><a class="dropdown-item" href="#">Not yet solved <span class="badge rounded-pill bg-info float-end">54</span></a></li>
            <li><a class="dropdown-item" href="#">Not yet read <span class="badge rounded-pill bg-info float-end">45</span></a></li>
            <li><a class="dropdown-item" href="#">Read <span class="badge rounded-pill bg-info float-end">21</span></a></li>
            <li><a class="dropdown-item" href="#">Correct <span class="badge rounded-pill bg-info float-end">12</span></a></li>
            <li><a class="dropdown-item disabled" href="#">Wrong <span class="badge rounded-pill bg-info float-end">0</span></a></li>
          </ul>
        </div>
      </form>
    </details>
</div>

<script type="text/javascript">
    $(function () {
        const filterCollections = {};
        <% if local_assigns.fetch :labels, false %>
        filterCollections["labels"] = {
            param: "labels",
            paramVal: function(l) { return l.name; },
            multi: true,
            data: <%= raw render template: 'labels/index', formats: :json %>,
            color: function (label) {
                return label.color;
            },
        };
        <% end %>
        <% if local_assigns.fetch :programming_languages, false %>
        filterCollections["programming_languages"] = {
            param: "programming_language",
            paramVal: function(p) { return p.name; },
            multi: false,
            data: <%= raw render template: 'programming_languages/index', formats: :json %>,
            color: function () {
                return "teal";
            },
        };
        <% end %>
        <% if local_assigns.fetch :repositories, false %>
        filterCollections["repositories"] = {
            param: "repository_id",
            paramVal: function(r) { return r.id; },
            multi: false,
            data: <%= raw render template: 'repositories/index', formats: :json %>,
            color: function () {
                return "blue-grey";
            },
        };
        <% end %>
        <% if local_assigns.fetch(:institutions, []).length > 1 %>
        filterCollections["institutions"] = {
            param: "institution_id",
            paramVal: function(i) { return i.id; },
            multi: false,
            data: <%= raw local_assigns.fetch(:institutions, []).map{|i| {id: i.id, name: i.name}}.to_json %>,
            color: function () {
                return "pink";
            },
        };
        <% end %>
        <% if local_assigns.fetch :course_labels, false %>
        filterCollections["course_labels"] = {
            param: "course_labels",
            paramVal: function (cl) {
                return cl.name;
            },
            multi: true,
            data: <%= raw local_assigns.fetch(:course_labels, []).map{|cl| {id: cl.id, name: cl.name}}.to_json %>,
            color: function () {
                return "orange";
            },
        };
        <% end %>
        <% if local_assigns.fetch :statuses, false %>
        filterCollections["statuses"] = {
            param: "status",
            paramVal: function (s) {
                return s.id;
            },
            multi: false,
            data: <%= raw local_assigns.fetch(:statuses, []).map{|s| {id: s, name: Submission.human_enum_name(:status, s)}}.to_json %>,
            color: function () {
                return "indigo";
            },
        };
        <% end %>
        <% if local_assigns.fetch :question_states, false %>
        filterCollections["question_states"] = {
            param: "question_state",
            paramVal: function (s) {
                return s.id;
            },
            multi: false,
            data: <%= raw local_assigns.fetch(:question_states, []).map{|s| {id: s, name: Question.human_enum_name(:question_state, s)}}.to_json %>,
            color: function () {
                return "indigo";
            },
        };
        <% end %>
        <% if local_assigns.fetch :event_types, false %>
        filterCollections["event_types"] = {
            param: "type",
            paramVal: function (s) {
                return s.id;
            },
            multi: false,
            data: <%= raw local_assigns.fetch(:event_types, []).map{|s| {id: s, name: Event.human_enum_name(:event_type, s)}}.to_json %>,
            color: function () {
                return "deep-purple";
            },
        };
        <% end %>
        <% if local_assigns.fetch :activity_types, false %>
        filterCollections["activity_types"] = {
            param: "type",
            paramVal: function (s) {
                return s.id;
            },
            multi: false,
            data: <%= raw local_assigns.fetch(:activity_types, []).map{|s| {id: s.name, name: s.model_name.human}}.to_json %>,
            color: function () {
                return "deep-purple";
            },
        };
        <% end %>
        <% if local_assigns.fetch :description_languages, false %>
        filterCollections["description_languages"] = {
            param: "description_languages",
            paramVal: function (lang) {
                return lang.id;
            },
            multi: true,
            data: <%= raw local_assigns.fetch(:description_languages, []).map{|l| {id: l, name: t("js.#{l}")}}.to_json %>,
            color: function () {
                return "orange";
            },
        };
        <% end %>
        <% if local_assigns.fetch :judges, false %>
        filterCollections["judges"] = {
            param: "judge_id",
            paramVal: function(judge) {
                return judge.id;
            },
            multi: false,
            data: <%= raw local_assigns.fetch(:judges, []).map{|judge| {id: judge.id, name: "#{judge.name}-judge"}}.to_json %>,
            color: function () {
                return "red";
            }
        }
        <% end %>
        <% if local_assigns.fetch :courses, false %>
        filterCollections["courses"] = {
            param: "course_id",
            paramVal: function(course) {
                return course.id;
            },
            multi: false,
            data: <%= raw local_assigns.fetch(:courses, []).map{|course| {id: course.id, name: course.name}}.to_json %>,
            color: function () {
                return "orange";
            }
        };
        <% end %>
        dodona.initFilterIndex(
            "<%= local_assigns.fetch :baseUrl, "" %>",
            <%= local_assigns.fetch :eager, false %>,
            <%= raw (local_assigns.fetch :actions, false).to_json %>,
            <%= local_assigns.fetch :init_filter, true %>,
            filterCollections,
            "<%= local_assigns.fetch :refresh_element, "" %>"
        );
    });
</script>
