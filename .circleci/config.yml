version: 2.1

references:
  docker_ruby_config: &docker_ruby_config
    image: circleci/ruby:2.5.1-node
    environment:
      RAILS_ENV: "test"
      PARALLEL_WORKERS: "8"
      DATABASE_URL: "mysql2://root:dodona@127.0.0.1:3306/dodona_test"
      BUNDLE_PATH: vendor/bundle
  docker_db_config: &docker_db_config
    image: circleci/mariadb:10.4.6
    environment:
      MYSQL_DATABASE: "dodona_test"
      MYSQL_ROOT_PASSWORD: "dodona"
      MYSQL_HOST: "localhost"

commands:
  setup:
    description: "Set up repo and dependencies"
    steps:
      - checkout
      - restore_cache:
          keys:
            - dodona-bundle-{{ checksum "Gemfile.lock" }}
            - dodona-bundle-
      - run:
          name: Bundle install
          command: bundle check || bundle install
      - save_cache:
          key: dodona-bundle-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle
      - restore_cache:
          keys:
            - dodona-yarn-{{ checksum "yarn.lock" }}
            - dodona-yarn-
      - run:
          name: Yarn install
          command: yarn install --cache-folder ~/.cache/yarn
      - save_cache:
          key: dodona-yarn-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn
jobs:
  test_ruby:
    docker:
      - *docker_ruby_config
      - *docker_db_config
    working_directory: ~/repo
    steps:
      - setup
      - run:
          name: Wait for DB
          command: dockerize -wait tcp://localhost:3306 -timeout 1m
      - run:
          name: Database setup
          command: bundle exec rails db:schema:load --trace
      - run:
          name: Setup git config
          command: |
            git config --global user.name Dodona
            git config --global user.email "dodona@ugent.be"
      - run:
          name: Run tests
          command: bundle exec rails test --ci-dir=/tmp/test-results/minitest
      - store_test_results:
          path: /tmp/test-results

  test_js:
    docker:
      - *docker_ruby_config
    working_directory: ~/repo
    steps:
      - setup
      - run:
          name: Run tests
          command: yarn test --ci --runInBand --reporters=default --reporters=jest-junit
          environment:
            JEST_JUNIT_OUTPUT: "reports/jest/js-test-results.xml"
      - store_test_results:
          path: reports/jest
      - store_artifacts:
          path: reports/jest

  lint:
    docker:
      - *docker_ruby_config
    working_directory: ~/repo
    steps:
      - setup
      - run:
          name: Run RuboCop
          command: bundle exec rubocop -c ./.rubocop.yml ~/repo/app
      - run:
          name: Run eslint
          command: yarn lint --quiet --format junit --output-file ~/reports/eslint/result.xml
      - store_test_results:
          path: ~/reports

workflows:
  version: 2
  lint:
    jobs:
      - lint
  test:
    jobs:
      - test_ruby
      - test_js
